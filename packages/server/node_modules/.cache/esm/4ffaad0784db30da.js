let gql,createRepository;_84d‍.x([["typeDefs",()=>typeDefs],["resolvers",()=>resolvers]]);_84d‍.w("apollo-server-express",[["gql",["gql"],function(v){gql=v}]]);_84d‍.w("../../io/Database/createRepository",[["default",["createRepository"],function(v){createRepository=v}]]);
//import * as uuid from 'uuid';


const clientRepository = createRepository('client');

       const typeDefs= gql`
    type Client{
        id:ID!
        name: String!
        email: String!
        disabled: Boolean!
    }
    extend type Query{
        client(id: ID!): Client
        clients: [Client!]!
    }
`;

       const resolvers ={
    Query:{
        client: async(
            _, 
            { id }, //id
            //{  }, //global
            //info
        )=>{
            const clients = await clientRepository.read();
            _84d‍.g.console.log(clients)
            return clients.find((client) => client.id === id)
    }}
}